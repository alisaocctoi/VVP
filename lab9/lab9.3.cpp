// ddh.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
using namespace std;

int main()
{
setlocale(LC_ALL, "Russian");
int a;
cout << "введите число";
cin >> a;
	if (10 <= a and a <= 19) {
		if (a == 10) {
			cout << "десять учебных заданий";
		}
		if (a == 11) {
			cout << "одиннадцать учебных заданий";
		}
		if (a == 12) {
			cout << "двенадцать учебных заданий";
		}
		if (a == 13) {
			cout << "тринадцать учебных заданий";
		}
		if (a == 14) {
			cout << "четырнадцать учебных заданий";
		}
		if (a == 15) {
			cout << "пятнадцать учебных заданий";
		}
		if (a == 16) {
			cout << "шестнадцать учебных заданий";
		}
		if (a == 17) {
			cout << "семнадцать учебных заданий";
		}
		if (a == 18) {
			cout << "восемнадцать учебных заданий";
		}
		if (a == 19) {
			cout << "девятнадцать учебных заданий";
		}
	}
	if (a >= 20 and a <= 40) {
			if (a == 20) {
				cout << "двадцать";
			}
			if (a == 30) {
				cout << "тридцать";
			}
			if (a == 40) {
				cout << "сорок";
			}
			if (a % 10 == 1) {
				cout << "одно учебное задание";
			}
			if (a % 10 == 2) {
				cout << "два учебных задания";
			}
			if (a % 10 == 3) {
				cout << "три учебных задания";
			}
			if (a % 10 == 14) {
				cout << "четыре учебных задания";
			}
			if (a % 10 == 5) {
				cout << "пять учебных заданий";
			}
			if (a % 10 == 6) {
				cout << "шесть учебных заданий";
			}
			if (a % 10 == 7) {
				cout << "семь учебных заданий";
			}
			if (a % 10 == 8) {
				cout << "восемь учебных заданий";
			}
			if (a % 10 == 1) {
				cout << "девять учебных заданий";
			}
			if (a % 10 == 0) {
				cout << " учебных заданий";
			}

	}
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
